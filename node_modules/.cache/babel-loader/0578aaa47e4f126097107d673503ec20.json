{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shreyas\\\\Desktop\\\\Reactjs\\\\foodcartapp\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport useInput from \"../../CustomHooks/use-input\";\nimport classes from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === \"\";\n\nconst isFiveChars = value => value.trim().length >= 5;\n\nconst Checkout = props => {\n  _s();\n\n  //! For validating name input\n  const validateNameInput = value => value.trim() !== \"\";\n\n  const {\n    value: enteredName,\n    inputChangeHandler: nameInputHandler,\n    inputBlurHandler: nameBlurHandler,\n    valueIsValid: nameIsValid,\n    hasError: nameHasError\n  } = useInput(validateNameInput); //! For validating street input\n\n  const validateStreetInput = value => value.trim().length > 5;\n\n  const {\n    value: enteredStreet,\n    inputChangeHandler: streetInputHandler,\n    inputBlurHandler: streetBlurHandler,\n    valueIsValid: streetIsValid,\n    hasError: streetHasError\n  } = useInput(validateStreetInput); //! For validating postalCode input\n\n  const validatePostalCodeInput = value => value.trim().length === 6;\n\n  const {\n    value: enteredPostalCode,\n    inputChangeHandler: postalCodeInputHandler,\n    inputBlurHandler: postalCodeBlurHandler,\n    valueIsValid: postalCodeIsValid,\n    hasError: postalCodeHasError\n  } = useInput(validatePostalCodeInput); //! For validating city input\n\n  const validateCityInput = value => value.trim() >= 3;\n\n  const {\n    value: enteredCity,\n    inputChangeHandler: cityInputHandler,\n    inputBlurHandler: cityBlurHandler,\n    valueIsValid: cityIsValid,\n    hasError: cityHasError\n  } = useInput(validateCityInput);\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const formIsValid = nameIsValid && streetIsValid && cityIsValid && postalCodeIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      city: enteredCity,\n      postalCode: enteredPostalCode\n    });\n  };\n\n  const nameControlClasses = `${classes.control} ${nameHasError ? classes.invalid : \"\"}`;\n  const streetControlClasses = `${classes.control} ${streetHasError ? classes.invalid : \"\"}`;\n  const postalCodeControlClasses = `${classes.control} ${postalCodeHasError ? classes.invalid : \"\"}`;\n  const cityControlClasses = `${classes.control} ${cityHasError ? classes.invalid : \"\"}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputHandler,\n        onBlur: nameBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), !nameIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        onChange: streetInputHandler,\n        onBlur: streetBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), !streetIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalCodeControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        onChange: postalCodeInputHandler,\n        onBlur: postalCodeBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), !postalCodeIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid postal code!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        onChange: cityInputHandler,\n        onBlur: cityBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), !cityIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        disabled: !formIsValid,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"+Z/dt5kJlmdx+wNqMdkZHOb0Dxc=\", false, function () {\n  return [useInput, useInput, useInput, useInput];\n});\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["C:/Users/Shreyas/Desktop/Reactjs/foodcartapp/src/components/Cart/Checkout.js"],"names":["useInput","classes","isEmpty","value","trim","isFiveChars","length","Checkout","props","validateNameInput","enteredName","inputChangeHandler","nameInputHandler","inputBlurHandler","nameBlurHandler","valueIsValid","nameIsValid","hasError","nameHasError","validateStreetInput","enteredStreet","streetInputHandler","streetBlurHandler","streetIsValid","streetHasError","validatePostalCodeInput","enteredPostalCode","postalCodeInputHandler","postalCodeBlurHandler","postalCodeIsValid","postalCodeHasError","validateCityInput","enteredCity","cityInputHandler","cityBlurHandler","cityIsValid","cityHasError","confirmHandler","event","preventDefault","formIsValid","onConfirm","name","street","city","postalCode","nameControlClasses","control","invalid","streetControlClasses","postalCodeControlClasses","cityControlClasses","form","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import useInput from \"../../CustomHooks/use-input\";\r\n\r\nimport classes from \"./Checkout.module.css\";\r\n\r\nconst isEmpty = (value) => value.trim() === \"\";\r\nconst isFiveChars = (value) => value.trim().length >= 5;\r\n\r\nconst Checkout = (props) => {\r\n  //! For validating name input\r\n  const validateNameInput = (value) => value.trim() !== \"\";\r\n  const {\r\n    value: enteredName,\r\n    inputChangeHandler: nameInputHandler,\r\n    inputBlurHandler: nameBlurHandler,\r\n    valueIsValid: nameIsValid,\r\n    hasError: nameHasError,\r\n  } = useInput(validateNameInput);\r\n\r\n  //! For validating street input\r\n  const validateStreetInput = (value) => value.trim().length > 5;\r\n  const {\r\n    value: enteredStreet,\r\n    inputChangeHandler: streetInputHandler,\r\n    inputBlurHandler: streetBlurHandler,\r\n    valueIsValid: streetIsValid,\r\n    hasError: streetHasError,\r\n  } = useInput(validateStreetInput);\r\n\r\n  //! For validating postalCode input\r\n  const validatePostalCodeInput = (value) => value.trim().length === 6;\r\n  const {\r\n    value: enteredPostalCode,\r\n    inputChangeHandler: postalCodeInputHandler,\r\n    inputBlurHandler: postalCodeBlurHandler,\r\n    valueIsValid: postalCodeIsValid,\r\n    hasError: postalCodeHasError,\r\n  } = useInput(validatePostalCodeInput);\r\n\r\n  //! For validating city input\r\n  const validateCityInput = (value) => value.trim() >= 3;\r\n  const {\r\n    value: enteredCity,\r\n    inputChangeHandler: cityInputHandler,\r\n    inputBlurHandler: cityBlurHandler,\r\n    valueIsValid: cityIsValid,\r\n    hasError: cityHasError,\r\n  } = useInput(validateCityInput);\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const formIsValid =\r\n      nameIsValid && streetIsValid && cityIsValid && postalCodeIsValid;\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    props.onConfirm({\r\n      name: enteredName,\r\n      street: enteredStreet,\r\n      city: enteredCity,\r\n      postalCode: enteredPostalCode,\r\n    });\r\n  };\r\n\r\n  const nameControlClasses = `${classes.control} ${\r\n    nameHasError ? classes.invalid : \"\"\r\n  }`;\r\n  const streetControlClasses = `${classes.control} ${\r\n    streetHasError ? classes.invalid : \"\"\r\n  }`;\r\n  const postalCodeControlClasses = `${classes.control} ${\r\n    postalCodeHasError ? classes.invalid : \"\"\r\n  }`;\r\n  const cityControlClasses = `${classes.control} ${\r\n    cityHasError ? classes.invalid : \"\"\r\n  }`;\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameControlClasses}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          onChange={nameInputHandler}\r\n          onBlur={nameBlurHandler}\r\n        />\r\n        {!nameIsValid && <p>Please enter a valid name!</p>}\r\n      </div>\r\n      <div className={streetControlClasses}>\r\n        <label htmlFor=\"street\">Street</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"street\"\r\n          onChange={streetInputHandler}\r\n          onBlur={streetBlurHandler}\r\n        />\r\n        {!streetIsValid && <p>Please enter a valid street!</p>}\r\n      </div>\r\n      <div className={postalCodeControlClasses}>\r\n        <label htmlFor=\"postal\">Postal Code</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"postal\"\r\n          onChange={postalCodeInputHandler}\r\n          onBlur={postalCodeBlurHandler}\r\n        />\r\n        {!postalCodeIsValid && <p>Please enter a valid postal code!</p>}\r\n      </div>\r\n      \r\n      <div className={cityControlClasses}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"city\"\r\n          onChange={cityInputHandler}\r\n          onBlur={cityBlurHandler}\r\n        />\r\n        {!cityIsValid && <p>Please enter a valid city!</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit} disabled={!formIsValid}>\r\n          Confirm\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"]},"metadata":{},"sourceType":"module"}