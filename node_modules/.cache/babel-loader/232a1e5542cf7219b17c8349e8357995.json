{"ast":null,"code":"import _slicedToArray from\"C:/Users/Shreyas/Desktop/Reactjs/foodcartapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";var useInput=function useInput(validateInput){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),enteredValue=_useState2[0],setEnteredValue=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isTouched=_useState4[0],setIsTouched=_useState4[1];var inputChangeHandler=function inputChangeHandler(event){setEnteredValue(event.target.value);};var inputBlurHandler=function inputBlurHandler(){setIsTouched(true);};var valueIsValid=validateInput(enteredValue);var hasError=!valueIsValid&&isTouched;return{value:enteredValue,inputChangeHandler:inputChangeHandler,inputBlurHandler:inputBlurHandler,valueIsValid:valueIsValid,hasError:hasError};};export default useInput;","map":{"version":3,"sources":["C:/Users/Shreyas/Desktop/Reactjs/foodcartapp/src/CustomHooks/use-input.js"],"names":["React","useState","useInput","validateInput","enteredValue","setEnteredValue","isTouched","setIsTouched","inputChangeHandler","event","target","value","inputBlurHandler","valueIsValid","hasError"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,aAAD,CAAmB,CAClC,cAAwCF,QAAQ,CAAC,EAAD,CAAhD,wCAAOG,YAAP,eAAqBC,eAArB,eACA,eAAkCJ,QAAQ,CAAC,KAAD,CAA1C,yCAAOK,SAAP,eAAkBC,YAAlB,eAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAW,CACpCJ,eAAe,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CACD,CAFD,CAIA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7BL,YAAY,CAAC,IAAD,CAAZ,CACD,CAFD,CAIA,GAAMM,CAAAA,YAAY,CAAGV,aAAa,CAACC,YAAD,CAAlC,CACA,GAAMU,CAAAA,QAAQ,CAAG,CAACD,YAAD,EAAiBP,SAAlC,CAEA,MAAM,CACFK,KAAK,CAAEP,YADL,CAEFI,kBAAkB,CAAlBA,kBAFE,CAGFI,gBAAgB,CAAhBA,gBAHE,CAIFC,YAAY,CAAZA,YAJE,CAKFC,QAAQ,CAARA,QALE,CAAN,CAOD,CAtBD,CAuBA,cAAeZ,CAAAA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst useInput = (validateInput) => {\r\n  const [enteredValue, setEnteredValue] = useState(\"\");\r\n  const [isTouched, setIsTouched] = useState(false);\r\n\r\n  const inputChangeHandler = (event) => {\r\n    setEnteredValue(event.target.value);\r\n  };\r\n\r\n  const inputBlurHandler = () => {\r\n    setIsTouched(true);\r\n  };\r\n\r\n  const valueIsValid = validateInput(enteredValue)\r\n  const hasError = !valueIsValid && isTouched\r\n\r\n  return{\r\n      value: enteredValue,\r\n      inputChangeHandler,\r\n      inputBlurHandler,\r\n      valueIsValid,\r\n      hasError\r\n  }\r\n};\r\nexport default useInput;\r\n"]},"metadata":{},"sourceType":"module"}