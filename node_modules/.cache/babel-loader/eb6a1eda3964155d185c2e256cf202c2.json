{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\n\nconst useInput = validateInput => {\n  _s();\n\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n\n  const inputChangeHandler = event => {\n    setEnteredValue(event.target.value);\n  };\n\n  const inputBlurHandler = () => {\n    setIsTouched(true);\n  };\n\n  const valueIsValid = validateInput(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n  return {\n    value: enteredValue,\n    inputChangeHandler,\n    inputBlurHandler,\n    valueIsValid,\n    hasError\n  };\n};\n\n_s(useInput, \"qlnmfbTzj9Q0H+uTzI/AGYgwaf8=\");\n\nexport default useInput;","map":{"version":3,"sources":["C:/Users/Shreyas/Desktop/Reactjs/foodcartapp/src/CustomHooks/use-input.js"],"names":["React","useState","useInput","validateInput","enteredValue","setEnteredValue","isTouched","setIsTouched","inputChangeHandler","event","target","value","inputBlurHandler","valueIsValid","hasError"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,QAAQ,GAAIC,aAAD,IAAmB;AAAA;;AAClC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMO,kBAAkB,GAAIC,KAAD,IAAW;AACpCJ,IAAAA,eAAe,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAIA,QAAMM,YAAY,GAAGV,aAAa,CAACC,YAAD,CAAlC;AACA,QAAMU,QAAQ,GAAG,CAACD,YAAD,IAAiBP,SAAlC;AAEA,SAAM;AACFK,IAAAA,KAAK,EAAEP,YADL;AAEFI,IAAAA,kBAFE;AAGFI,IAAAA,gBAHE;AAIFC,IAAAA,YAJE;AAKFC,IAAAA;AALE,GAAN;AAOD,CAtBD;;GAAMZ,Q;;AAuBN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst useInput = (validateInput) => {\r\n  const [enteredValue, setEnteredValue] = useState(\"\");\r\n  const [isTouched, setIsTouched] = useState(false);\r\n\r\n  const inputChangeHandler = (event) => {\r\n    setEnteredValue(event.target.value);\r\n  };\r\n\r\n  const inputBlurHandler = () => {\r\n    setIsTouched(true);\r\n  };\r\n\r\n  const valueIsValid = validateInput(enteredValue)\r\n  const hasError = !valueIsValid && isTouched\r\n\r\n  return{\r\n      value: enteredValue,\r\n      inputChangeHandler,\r\n      inputBlurHandler,\r\n      valueIsValid,\r\n      hasError\r\n  }\r\n};\r\nexport default useInput;\r\n"]},"metadata":{},"sourceType":"module"}