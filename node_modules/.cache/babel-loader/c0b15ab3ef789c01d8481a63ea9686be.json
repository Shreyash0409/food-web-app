{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Shreyas/Desktop/Reactjs/foodcartapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Shreyas/Desktop/Reactjs/foodcartapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/Shreyas/Desktop/Reactjs/foodcartapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useState}from\"react\";var useHttp=function useHttp(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var httpRequest=useCallback(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(requireConfig,applyData){var response,responseData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setIsLoading(true);setError(null);_context.prev=2;_context.next=5;return fetch(requireConfig.url,{method:requireConfig.method?requireConfig.method:\"GET\",body:requireConfig.body?requireConfig.body:null,headers:requireConfig.headers?requireConfig.headers:{}});case 5:response=_context.sent;if(response.ok){_context.next=8;break;}throw new Error(\"Something went wrong.\");case 8:_context.next=10;return response.json();case 10:responseData=_context.sent;applyData(responseData);_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](2);setError(_context.t0.message);case 17:setIsLoading(false);case 18:case\"end\":return _context.stop();}}},_callee,null,[[2,14]]);}));return function(_x,_x2){return _ref.apply(this,arguments);};}(),[]);return{isLoading:isLoading,error:error,httpRequest:httpRequest};};export default useHttp;","map":{"version":3,"sources":["C:/Users/Shreyas/Desktop/Reactjs/foodcartapp/src/CustomHooks/use-http.js"],"names":["React","useCallback","useState","useHttp","isLoading","setIsLoading","error","setError","httpRequest","requireConfig","applyData","fetch","url","method","body","headers","response","ok","Error","json","responseData","message"],"mappings":"seAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,QAA7B,KAA6C,OAA7C,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpB,cAAkCD,QAAQ,CAAC,KAAD,CAA1C,wCAAOE,SAAP,eAAkBC,YAAlB,eACA,eAA0BH,QAAQ,CAAC,IAAD,CAAlC,yCAAOI,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,WAAW,CAAGP,WAAW,0FAAC,iBAAOQ,aAAP,CAAsBC,SAAtB,4IAC9BL,YAAY,CAAC,IAAD,CAAZ,CACAE,QAAQ,CAAC,IAAD,CAAR,CAF8B,sCAILI,CAAAA,KAAK,CAACF,aAAa,CAACG,GAAf,CAAoB,CAC9CC,MAAM,CAAEJ,aAAa,CAACI,MAAd,CAAuBJ,aAAa,CAACI,MAArC,CAA8C,KADR,CAE9CC,IAAI,CAAEL,aAAa,CAACK,IAAd,CAAqBL,aAAa,CAACK,IAAnC,CAA0C,IAFF,CAG9CC,OAAO,CAAEN,aAAa,CAACM,OAAd,CAAwBN,aAAa,CAACM,OAAtC,CAAgD,EAHX,CAApB,CAJA,QAItBC,QAJsB,kBAUvBA,QAAQ,CAACC,EAVc,8BAWpB,IAAIC,CAAAA,KAAJ,CAAU,uBAAV,CAXoB,+BAcDF,CAAAA,QAAQ,CAACG,IAAT,EAdC,SActBC,YAdsB,eAe5BV,SAAS,CAACU,YAAD,CAAT,CAf4B,iFAiB5Bb,QAAQ,CAAC,YAAMc,OAAP,CAAR,CAjB4B,QAmB9BhB,YAAY,CAAC,KAAD,CAAZ,CAnB8B,qEAAD,mEAoB5B,EApB4B,CAA/B,CAqBA,MAAO,CACLD,SAAS,CAATA,SADK,CAELE,KAAK,CAALA,KAFK,CAGLE,WAAW,CAAXA,WAHK,CAAP,CAKD,CA9BD,CA+BA,cAAeL,CAAAA,OAAf","sourcesContent":["import React, { useCallback, useState } from \"react\";\r\n\r\nconst useHttp = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const httpRequest = useCallback(async (requireConfig, applyData) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(requireConfig.url, {\r\n        method: requireConfig.method ? requireConfig.method : \"GET\",\r\n        body: requireConfig.body ? requireConfig.body : null,\r\n        headers: requireConfig.headers ? requireConfig.headers : {},\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong.\");\r\n      }\r\n\r\n      const responseData = await response.json();\r\n      applyData(responseData);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n    setIsLoading(false); \r\n  }, []);\r\n  return {\r\n    isLoading,\r\n    error,\r\n    httpRequest,\r\n  };\r\n};\r\nexport default useHttp;\r\n"]},"metadata":{},"sourceType":"module"}