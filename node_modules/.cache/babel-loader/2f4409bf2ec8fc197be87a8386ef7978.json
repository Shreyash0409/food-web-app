{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shreyas\\\\Desktop\\\\Reactjs\\\\01-starting-project\\\\01-starting-project\\\\src\\\\store\\\\CartProvider.js\";\nimport React from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst cartReducer = (state, action) => {}; //TODO : The goal of this component is simply to manage the cart-context data and provide that context to all the components that wants access to it. We can also write all the logics for managing the context data in this component just to make sure that our APP.js component should be neat and clean.\n\n\nconst CartProvider = props => {\n  cons;\n\n  const addItemToCartHandler = item => {};\n\n  const removeItemFromCartHandler = id => {};\n\n  const cartContext = {\n    items: [],\n    totalAmount: 0,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CartProvider;\nexport default CartProvider; //! Now we just need to wrap all those components that wants access to the cart-context data\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Shreyas/Desktop/Reactjs/01-starting-project/01-starting-project/src/store/CartProvider.js"],"names":["React","CartContext","cartReducer","state","action","CartProvider","props","cons","addItemToCartHandler","item","removeItemFromCartHandler","id","cartContext","items","totalAmount","addItem","removeItem","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB,CAAE,CAAzC,C,CAEA;;;AACA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAE5BC,EAAAA,IAAI;;AACN,QAAMC,oBAAoB,GAAIC,IAAD,IAAU,CAAE,CAAzC;;AAEA,QAAMC,yBAAyB,GAAIC,EAAD,IAAQ,CAAE,CAA5C;;AAEA,QAAMC,WAAW,GAAG;AAClBC,IAAAA,KAAK,EAAE,EADW;AAElBC,IAAAA,WAAW,EAAE,CAFK;AAGlBC,IAAAA,OAAO,EAAEP,oBAHS;AAIlBQ,IAAAA,UAAU,EAAEN;AAJM,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACGN,KAAK,CAACW;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAnBD;;KAAMZ,Y;AAqBN,eAAeA,YAAf,C,CAEA","sourcesContent":["import React from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst cartReducer = (state, action) => {};\r\n\r\n//TODO : The goal of this component is simply to manage the cart-context data and provide that context to all the components that wants access to it. We can also write all the logics for managing the context data in this component just to make sure that our APP.js component should be neat and clean.\r\nconst CartProvider = (props) => {\r\n\r\n    cons\r\n  const addItemToCartHandler = (item) => {};\r\n\r\n  const removeItemFromCartHandler = (id) => {};\r\n\r\n  const cartContext = {\r\n    items: [],\r\n    totalAmount: 0,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n\r\n//! Now we just need to wrap all those components that wants access to the cart-context data\r\n"]},"metadata":{},"sourceType":"module"}