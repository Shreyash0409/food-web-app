{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shreyas\\\\Desktop\\\\Reactjs\\\\foodcartapp\\\\src\\\\components\\\\Meals\\\\AvailableMeals.jsx\",\n    _s = $RefreshSig$();\n\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\";\nimport { useEffect, useState } from \"react\";\nimport useHttp from \"../../CustomHooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const {\n    isLoading,\n    error,\n    httpRequest: fetchMeals\n  } = useHttp();\n  useEffect(() => {\n    const tranformMeals = mealsObj;\n    const loadedMeals = []; //! To putting the incoming object one by one in this array.\n\n    for (const key in responseData) {\n      loadedMeals.push({\n        id: key,\n        name: responseData[key].name,\n        description: responseData[key].description,\n        price: responseData[key].price\n      });\n    }\n\n    setMeals(loadedMeals);\n    setisLoading(false);\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.mealsLoading,\n      children: \"Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.mealsError,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"mAy5C/JD9aqkE1HDFSUBwtUIfZQ=\", false, function () {\n  return [useHttp];\n});\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["C:/Users/Shreyas/Desktop/Reactjs/foodcartapp/src/components/Meals/AvailableMeals.jsx"],"names":["Card","MealItem","classes","useEffect","useState","useHttp","AvailableMeals","meals","setMeals","isLoading","error","httpRequest","fetchMeals","tranformMeals","mealsObj","loadedMeals","key","responseData","push","id","name","description","price","setisLoading","mealsLoading","mealsError","mealsList","map","meal"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,4BAApB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAACK,IAAAA,SAAD;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,WAAW,EAAEC;AAAhC,MAA8CP,OAAO,EAA3D;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,aAAa,GAAIC,QAAvB;AACA,UAAMC,WAAW,GAAG,EAApB,CAFY,CAEY;;AAExB,SAAK,MAAMC,GAAX,IAAkBC,YAAlB,EAAgC;AAC9BF,MAAAA,WAAW,CAACG,IAAZ,CAAiB;AACfC,QAAAA,EAAE,EAAEH,GADW;AAEfI,QAAAA,IAAI,EAAEH,YAAY,CAACD,GAAD,CAAZ,CAAkBI,IAFT;AAGfC,QAAAA,WAAW,EAAEJ,YAAY,CAACD,GAAD,CAAZ,CAAkBK,WAHhB;AAIfC,QAAAA,KAAK,EAAEL,YAAY,CAACD,GAAD,CAAZ,CAAkBM;AAJV,OAAjB;AAMD;;AACDd,IAAAA,QAAQ,CAACO,WAAD,CAAR;AACAQ,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAdQ,EAcN,EAdM,CAAT;;AAgBA,MAAId,SAAJ,EAAe;AACb,wBAAO;AAAG,MAAA,SAAS,EAAEP,OAAO,CAACsB,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAId,KAAJ,EAAW;AACT,wBAAO;AAAG,MAAA,SAAS,EAAER,OAAO,CAACuB,UAAtB;AAAA,gBAAmCf;AAAnC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,QAAMgB,SAAS,GAAGnB,KAAK,CAACoB,GAAN,CAAWC,IAAD,iBAC1B,QAAC,QAAD;AAEE,IAAA,EAAE,EAAEA,IAAI,CAACT,EAFX;AAGE,IAAA,IAAI,EAAES,IAAI,CAACR,IAHb;AAIE,IAAA,WAAW,EAAEQ,IAAI,CAACP,WAJpB;AAKE,IAAA,KAAK,EAAEO,IAAI,CAACN;AALd,KACOM,IAAI,CAACT,EADZ;AAAA;AAAA;AAAA;AAAA,UADgB,CAAlB;AAUA,sBACE;AAAS,IAAA,SAAS,EAAEjB,OAAO,CAACK,KAA5B;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAKmB;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA5CD;;GAAMpB,c;UAEgDD,O;;;KAFhDC,c;AA8CN,eAAeA,cAAf","sourcesContent":["import Card from \"../UI/Card\";\r\nimport MealItem from \"./MealItem/MealItem\";\r\nimport classes from \"./AvailableMeals.module.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport useHttp from \"../../CustomHooks/use-http\";\r\n\r\nconst AvailableMeals = () => {\r\n  const [meals, setMeals] = useState([]);\r\n  const {isLoading, error, httpRequest: fetchMeals} = useHttp()\r\n\r\n  useEffect(() => {\r\n      const tranformMeals = (mealsObj)\r\n      const loadedMeals = []; //! To putting the incoming object one by one in this array.\r\n\r\n      for (const key in responseData) {\r\n        loadedMeals.push({\r\n          id: key,\r\n          name: responseData[key].name,\r\n          description: responseData[key].description,\r\n          price: responseData[key].price,\r\n        });\r\n      }\r\n      setMeals(loadedMeals);\r\n      setisLoading(false);\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return <p className={classes.mealsLoading}>Loading....</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p className={classes.mealsError}>{error}</p>;\r\n  }\r\n  const mealsList = meals.map((meal) => (\r\n    <MealItem\r\n      key={meal.id}\r\n      id={meal.id}\r\n      name={meal.name}\r\n      description={meal.description}\r\n      price={meal.price}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>\r\n        <ul>{mealsList}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AvailableMeals;\r\n"]},"metadata":{},"sourceType":"module"}