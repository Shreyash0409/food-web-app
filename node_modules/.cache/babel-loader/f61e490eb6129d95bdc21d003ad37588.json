{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Shreyas/Desktop/Reactjs/foodcartapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Shreyas/Desktop/Reactjs/foodcartapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"C:/Users/Shreyas/Desktop/Reactjs/foodcartapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/Shreyas/Desktop/Reactjs/foodcartapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState}from\"react\";import Modal from\"../UI/Modal\";import CartItem from\"./CartItem\";import classes from\"./Cart.module.css\";import CartContext from\"../../store/cart-context\";import Checkout from\"./Checkout\";import useHttp from\"../../CustomHooks/use-http\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Cart=function Cart(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isCheckout=_useState2[0],setIsCheckout=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),didSubmit=_useState4[0],setDidSubmit=_useState4[1];var cartCtx=useContext(CartContext);var _useHttp=useHttp(),isSubmitting=_useHttp.isLoading,submitRequest=_useHttp.httpRequest;var totalAmount=\"\\u20B9\".concat(cartCtx.totalAmount.toFixed(2));var hasItems=cartCtx.items.length>0;var cartItemRemoveHandler=function cartItemRemoveHandler(id){cartCtx.removeItem(id);};var cartItemAddHandler=function cartItemAddHandler(item){cartCtx.addItem(_objectSpread(_objectSpread({},item),{},{amount:1}));};var orderHandler=function orderHandler(){setIsCheckout(true);};var submitOrderHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userData){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:submitRequest({url:\"https://food-cart-react-default-rtdb.firebaseio.com/orders.json\",method:\"POST\",body:JSON.stringify({user:userData,orderedItems:cartCtx.items})});setDidSubmit(true);cartCtx.clearCart();case 3:case\"end\":return _context.stop();}}},_callee);}));return function submitOrderHandler(_x){return _ref.apply(this,arguments);};}();var cartItems=/*#__PURE__*/_jsx(\"ul\",{className:classes[\"cart-items\"],children:cartCtx.items.map(function(item){return/*#__PURE__*/_jsx(CartItem,{name:item.name,amount:item.amount,price:item.price,onRemove:cartItemRemoveHandler.bind(null,item.id),onAdd:cartItemAddHandler.bind(null,item)},item.id);})});var modalActions=/*#__PURE__*/_jsxs(\"div\",{className:classes.actions,children:[/*#__PURE__*/_jsx(\"button\",{className:classes[\"button--alt\"],onClick:props.onClose,children:\"Close\"}),hasItems&&/*#__PURE__*/_jsx(\"button\",{className:classes.button,onClick:orderHandler,children:\"Order\"})]});var cartModalContent=/*#__PURE__*/_jsxs(React.Fragment,{children:[cartItems,/*#__PURE__*/_jsxs(\"div\",{className:classes.total,children:[/*#__PURE__*/_jsx(\"span\",{children:\"Total Amount\"}),/*#__PURE__*/_jsx(\"span\",{children:totalAmount})]}),isCheckout&&/*#__PURE__*/_jsx(Checkout,{onConfirm:submitOrderHandler,onCancel:props.onClose}),!isCheckout&&modalActions]});var isSubmittingModalContent=/*#__PURE__*/_jsx(\"p\",{children:\"Sending order data...\"});var didSubmitModalContent=/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{children:\"Successfully sent the order!\"}),/*#__PURE__*/_jsx(\"div\",{className:classes.actions,children:/*#__PURE__*/_jsx(\"button\",{className:classes.button,onClick:props.onClose,children:\"Close\"})})]});return/*#__PURE__*/_jsxs(Modal,{onClose:props.onClose,children:[!isSubmitting&&!didSubmit&&cartModalContent,isSubmitting&&isSubmittingModalContent,!isSubmitting&&didSubmit&&didSubmitModalContent]});};export default Cart;","map":{"version":3,"sources":["C:/Users/Shreyas/Desktop/Reactjs/foodcartapp/src/components/Cart/Cart.jsx"],"names":["React","useContext","useState","Modal","CartItem","classes","CartContext","Checkout","useHttp","Cart","props","isCheckout","setIsCheckout","didSubmit","setDidSubmit","cartCtx","isSubmitting","isLoading","submitRequest","httpRequest","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","orderHandler","submitOrderHandler","userData","url","method","body","JSON","stringify","user","orderedItems","clearCart","cartItems","map","name","price","bind","modalActions","actions","onClose","button","cartModalContent","total","isSubmittingModalContent","didSubmitModalContent"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\n\r\nimport Modal from \"../UI/Modal\";\r\nimport CartItem from \"./CartItem\";\r\nimport classes from \"./Cart.module.css\";\r\nimport CartContext from \"../../store/cart-context\";\r\nimport Checkout from \"./Checkout\";\r\nimport useHttp from \"../../CustomHooks/use-http\";\r\n\r\nconst Cart = (props) => {\r\n  const [isCheckout, setIsCheckout] = useState(false);\r\n  const [didSubmit, setDidSubmit] = useState(false);\r\n  const cartCtx = useContext(CartContext);\r\n\r\n  const { isLoading: isSubmitting, httpRequest: submitRequest } = useHttp();\r\n\r\n  const totalAmount = `â‚¹${cartCtx.totalAmount.toFixed(2)}`;\r\n  const hasItems = cartCtx.items.length > 0;\r\n\r\n  const cartItemRemoveHandler = (id) => {\r\n    cartCtx.removeItem(id);\r\n  };\r\n\r\n  const cartItemAddHandler = (item) => {\r\n    cartCtx.addItem({ ...item, amount: 1 });\r\n  };\r\n\r\n  const orderHandler = () => {\r\n    setIsCheckout(true);\r\n  };\r\n\r\n  const submitOrderHandler = async (userData) => {\r\n    submitRequest({\r\n      url: \"https://food-cart-react-default-rtdb.firebaseio.com/orders.json\",\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        user: userData,\r\n        orderedItems: cartCtx.items,\r\n      }),\r\n    });\r\n    setDidSubmit(true);\r\n    cartCtx.clearCart();\r\n  };\r\n\r\n  const cartItems = (\r\n    <ul className={classes[\"cart-items\"]}>\r\n      {cartCtx.items.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          name={item.name}\r\n          amount={item.amount}\r\n          price={item.price}\r\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n          onAdd={cartItemAddHandler.bind(null, item)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  const modalActions = (\r\n    <div className={classes.actions}>\r\n      <button className={classes[\"button--alt\"]} onClick={props.onClose}>\r\n        Close\r\n      </button>\r\n      {hasItems && (\r\n        <button className={classes.button} onClick={orderHandler}>\r\n          Order\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const cartModalContent = (\r\n    <React.Fragment>\r\n      {cartItems}\r\n      <div className={classes.total}>\r\n        <span>Total Amount</span>\r\n        <span>{totalAmount}</span>\r\n      </div>\r\n      {isCheckout && (\r\n        <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose} />\r\n      )}\r\n      {!isCheckout && modalActions}\r\n    </React.Fragment>\r\n  );\r\n\r\n  const isSubmittingModalContent = <p>Sending order data...</p>;\r\n\r\n  const didSubmitModalContent = (\r\n    <React.Fragment>\r\n      <p>Successfully sent the order!</p>\r\n      <div className={classes.actions}>\r\n        <button className={classes.button} onClick={props.onClose}>\r\n          Close\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <Modal onClose={props.onClose}>\r\n      {!isSubmitting && !didSubmit && cartModalContent}\r\n      {isSubmitting && isSubmittingModalContent}\r\n      {!isSubmitting && didSubmit && didSubmitModalContent}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}