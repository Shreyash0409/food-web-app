{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shreyas\\\\Desktop\\\\Reactjs\\\\foodcartapp\\\\src\\\\components\\\\Cart\\\\Cart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport Modal from \"../UI/Modal\";\nimport CartItem from \"./CartItem\";\nimport classes from \"./Cart.module.css\";\nimport CartContext from \"../../store/cart-context\";\nimport Checkout from \"./Checkout\";\nimport useHttp from \"../../CustomHooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const [isCheckout, setIsCheckout] = useState(false);\n  const [didSubmit, setDidSubmit] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const {\n    isLoading: isS\n  } = useHttp();\n  const totalAmount = `â‚¹${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem(item);\n  };\n\n  const orderHandler = () => {\n    setIsCheckout(true);\n  };\n\n  const submitOrderHandler = async userData => {\n    setIsSubmitting(true);\n    await fetch(\"https://food-cart-react-default-rtdb.firebaseio.com/orders.json\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        user: userData,\n        orderedItems: cartCtx.items\n      })\n    });\n    setIsSubmitting(false);\n    setDidSubmit(true);\n    cartCtx.clearCart();\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[\"cart-items\"],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes[\"button--alt\"],\n      onClick: props.onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n\n  const cartModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: submitOrderHandler,\n      onCancel: props.onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), !isCheckout && modalActions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n\n  const isSubmittingModalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Sending order data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 36\n  }, this);\n\n  const didSubmitModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Successfully sent the order!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        onClick: props.onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [!isSubmitting && !didSubmit && cartModalContent, isSubmitting && isSubmittingModalContent, !isSubmitting && didSubmit && didSubmitModalContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"W6WjGKaTBlvGBHyo1aEXuL4epnc=\", false, function () {\n  return [useHttp];\n});\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/Shreyas/Desktop/Reactjs/foodcartapp/src/components/Cart/Cart.jsx"],"names":["React","useContext","useState","Modal","CartItem","classes","CartContext","Checkout","useHttp","Cart","props","isCheckout","setIsCheckout","didSubmit","setDidSubmit","cartCtx","isLoading","isS","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","orderHandler","submitOrderHandler","userData","setIsSubmitting","fetch","method","body","JSON","stringify","user","orderedItems","clearCart","cartItems","map","name","amount","price","bind","modalActions","actions","onClose","button","cartModalContent","total","isSubmittingModalContent","didSubmitModalContent","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\n\r\nimport Modal from \"../UI/Modal\";\r\nimport CartItem from \"./CartItem\";\r\nimport classes from \"./Cart.module.css\";\r\nimport CartContext from \"../../store/cart-context\";\r\nimport Checkout from \"./Checkout\";\r\nimport useHttp from \"../../CustomHooks/use-http\";\r\n\r\nconst Cart = (props) => {\r\n  const [isCheckout, setIsCheckout] = useState(false);\r\n  const [didSubmit, setDidSubmit] = useState(false);\r\n  const cartCtx = useContext(CartContext);\r\n\r\n  const{isLoading: isS} = useHttp()\r\n\r\n  const totalAmount = `â‚¹${cartCtx.totalAmount.toFixed(2)}`;\r\n  const hasItems = cartCtx.items.length > 0;\r\n\r\n  const cartItemRemoveHandler = (id) => {\r\n    cartCtx.removeItem(id);\r\n  };\r\n\r\n  const cartItemAddHandler = (item) => {\r\n    cartCtx.addItem(item);\r\n  };\r\n\r\n  const orderHandler = () => {\r\n    setIsCheckout(true);\r\n  };\r\n\r\n  const submitOrderHandler = async (userData) => {\r\n    setIsSubmitting(true);\r\n    await fetch(\r\n      \"https://food-cart-react-default-rtdb.firebaseio.com/orders.json\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          user: userData,\r\n          orderedItems: cartCtx.items,\r\n        }),\r\n      }\r\n    );\r\n    setIsSubmitting(false);\r\n    setDidSubmit(true);\r\n    cartCtx.clearCart();\r\n  };\r\n\r\n  const cartItems = (\r\n    <ul className={classes[\"cart-items\"]}>\r\n      {cartCtx.items.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          name={item.name}\r\n          amount={item.amount}\r\n          price={item.price}\r\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n          onAdd={cartItemAddHandler.bind(null, item)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  const modalActions = (\r\n    <div className={classes.actions}>\r\n      <button className={classes[\"button--alt\"]} onClick={props.onClose}>\r\n        Close\r\n      </button>\r\n      {hasItems && (\r\n        <button className={classes.button} onClick={orderHandler}>\r\n          Order\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const cartModalContent = (\r\n    <React.Fragment>\r\n      {cartItems}\r\n      <div className={classes.total}>\r\n        <span>Total Amount</span>\r\n        <span>{totalAmount}</span>\r\n      </div>\r\n      {isCheckout && (\r\n        <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose} />\r\n      )}\r\n      {!isCheckout && modalActions}\r\n    </React.Fragment>\r\n  );\r\n\r\n  const isSubmittingModalContent = <p>Sending order data...</p>;\r\n\r\n  const didSubmitModalContent = (\r\n    <React.Fragment>\r\n      <p>Successfully sent the order!</p>\r\n      <div className={classes.actions}>\r\n        <button className={classes.button} onClick={props.onClose}>\r\n          Close\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <Modal onClose={props.onClose}>\r\n      {!isSubmitting && !didSubmit && cartModalContent}\r\n      {isSubmitting && isSubmittingModalContent}\r\n      {!isSubmitting && didSubmit && didSubmitModalContent}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}